function removeFromImportedFiles(e){for(var t in imported_files)if(ifile=imported_files[t],ifile.project_id==e){delete imported_files[t];break}}var repoFilesInterval=0,imported_files=[],RepoFiles=React.createClass({displayName:"RepoFiles",loadRepoFilesFromServer:function(){$.ajax({url:this.props.url,dataType:"json",success:function(e){this.setState({data:e.repo,task_status:e.task_status}),"done"==e.task_status&&clearInterval(repoFilesInterval)}.bind(this),error:function(e,t,n){console.error(this.props.url,t,n.toString())}.bind(this)})},getInitialState:function(){return{data:[],task_status:""}},componentDidMount:function(){this.loadRepoFilesFromServer(),repoFilesInterval=setInterval(this.loadRepoFilesFromServer,this.props.pollInterval)},render:function(){repo_fullname=this.props.repo_fullname,scm=this.props.scm;var e=[];this.state.data.branches&&(e=this.state.data.branches);var t=[];this.state.data.project_files&&(t=this.state.data.project_files),this.state.data.imported_files&&(imported_files=this.state.data.imported_files);var n=e.map(function(e){return React.DOM.div({className:"repo-controls span8"},React.DOM.div({className:"table table-striped"},RepoBranch({data:e,project_files:t,repo_fullname:repo_fullname,scm:scm})))});return React.DOM.div(null,TaskStatusMessage({data:this.state.task_status}),n)}}),RepoBranch=React.createClass({displayName:"RepoBranch",render:function(){repo_fullname=this.props.repo_fullname,scm=this.props.scm,branch=this.props.data,project_files=this.props.project_files;var e=null;return project_files&&""!=project_files&&(e=project_files[branch].map(function(e){return BranchFile({data:e,branch:branch,repo_fullname:repo_fullname,scm:scm})})),(null==e||""==e)&&(e="We couldn't find any supported project files in this branch."),React.DOM.div(null,React.DOM.div({className:"scm_branch_head"},React.DOM.p(null,React.DOM.i({className:"icon-code-fork"})," ",branch)),React.DOM.div({className:"scm_branch_files_cell"},e))}}),BranchFile=React.createClass({displayName:"BranchFile",onChange:function(e){scm=this.props.scm,1==e.target.checked?(this.setState({import_status:"running",checked:!1}),url="/user/projects/"+scm+"/"+e.target.id.replace(/\//g,":")+"/import",$.ajax({url:url,dataType:"json",success:function(e){imported_files.push(e),this.setState({import_status:"",checked:!0})}.bind(this),error:function(e,t,n){var o=e.responseText;(null==o||""==o)&&(o="We are not able to import the selected file. Please contact the VersionEye team."),alert("ERROR: "+o),this.setState({import_status:"",checked:!1}),console.error(n.toString()),console.error(o)}.bind(this)})):(this.setState({import_status:"runnin",checked:!1}),url="/user/projects/"+scm+"/"+this.state.project_id+"/remove",$.ajax({url:url,dataType:"json",success:function(){removeFromImportedFiles(this.state.project_id),this.setState({import_status:"",checked:!1,project_url:"",project_id:""})}.bind(this),error:function(e,t,n){console.error(n.toString())}.bind(this)}))},getInitialState:function(){return{checked:!1,import_status:"",project_id:"",project_url:""}},render:function(){repo_fullname=this.props.repo_fullname,branch=this.props.branch,path=this.props.data.path,uid=repo_fullname+"::"+branch+"::"+path,uids=repo_fullname+"::"+branch+"::"+path+"_status",this.state.checked=!1;for(var e in imported_files)if(ifile=imported_files[e],ifile.branch==branch&&ifile.filename==path){this.state.checked=!0,this.state.project_id=ifile.project_id,this.state.project_url=ifile.project_url;break}return React.DOM.div({className:"row-fluid"},React.DOM.div({className:"scm_switch_cell"},React.DOM.div({className:"onoffswitch"},React.DOM.input({type:"checkbox",name:"onoffswitch",checked:this.state.checked,onChange:this.onChange,className:"onoffswitch-checkbox",id:uid}),React.DOM.label({className:"onoffswitch-label",htmlFor:uid},React.DOM.span({className:"onoffswitch-inner"}),React.DOM.span({className:"onoffswitch-switch"})))),React.DOM.div({className:"scm_switch_text_cell"},ProjectFile({import_status:this.state.import_status,project_id:this.state.project_id,project_url:this.state.project_url,id:uids,name:this.props.data.path})))}}),ProjectFile=React.createClass({displayName:"ProjectFile",getInitialState:function(){return{import_status:"",project_id:"",project_url:""}},render:function(){return this.state.import_status=this.props.import_status,this.state.project_url=this.props.project_url,this.state.project_id=this.props.project_id,"running"==this.state.import_status?React.DOM.table({className:"scm_table"},React.DOM.tr(null,React.DOM.td({className:"scm_td"},React.DOM.img({src:"/assets/progress-small.gif",alt:"work in progress"})),React.DOM.td({className:"scm_td"},this.props.name))):this.state.project_url?React.DOM.a({href:this.state.project_url}," ",this.props.name," "):React.DOM.span(null,this.props.name)}});