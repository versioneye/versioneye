<% title 'Github Repositories' %>

<div class="span3" >
  <%= render '/user/helpers/navi' %>
</div>


<% if !current_user.github_account_connected? %>

  <div class="span8">
    <div class="row content_header_def" >
      Connect with GitHub to monitor your GitHub Repositories.
    </div>
    <div class="content " >
      <%= render 'shared/login_with_github', :btn => "signup" %>
    </div>
  </div>

<% else %>

  <div class="span8">
    <div id="content"> . </div>
  </div>
  <script type="text/jsx">
    /** @jsx React.DOM */

    var store = []

    var RepoList = React.createClass({
      loadCommentsFromServer: function() {
        $.ajax({
          url: this.props.url,
          dataType: 'json',
          success: function(data) {
            store = data;
            this.setState({data: data});
          }.bind(this),
          error: function(xhr, status, err) {
            console.error(this.props.url, status, err.toString());
          }.bind(this)
        });
      },
      getInitialState: function() {
        return {data: [], text: ''};
      },
      componentWillMount: function() {
        this.loadCommentsFromServer();
        setInterval(this.loadCommentsFromServer, this.props.pollInterval);
      },
      onChange: function( e ) {
        filtered = [];
        data = store; // this.state.data
        for (var key in data) {
           if (data.hasOwnProperty(key)) {
              if (data[key]['fullname'].indexOf( e.target.value ) != -1) {
                filtered[key] = data[key];
                console.info(data[key]['fullname'])
              }
           }
        }
        this.setState({data: filtered, text: e.target.value})
      },
      render: function() {
        var scm_repos = this.state.data.map(function (repo) {
          return (
            <ScmRepo data={repo} />
          );
        });
        return (
          <div >
            <div>
              <input type="text" id="filter_input" value={this.state.text} onChange={this.onChange} />
            </div>
            <div className="scm_meta" >
              {this.state.data.length} Repositories
            </div>
            {scm_repos}
          </div>
        );
      }
    });

    var ScmRepo = React.createClass({
      render: function() {
        return (
          <div className="scm_repo" >
            {this.props.data.fullname}
          </div>
        );
      }
    });

    React.renderComponent(
      <RepoList url="/user/github_repos" pollInterval={200000} />,
      document.getElementById('content')
    );
    // data={data}
  </script>

<% end %>

